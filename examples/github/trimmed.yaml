components:
  parameters:
    account-id:
      description: account_id parameter
      in: path
      name: account_id
      required: true
      schema:
        type: integer
    page:
      description: The page number of the results to fetch. For more information,
        see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      name: page
      schema:
        default: 1
        type: integer
    pagination-after:
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers).
        If specified, the query only searches for results after this cursor. For more
        information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      name: after
      required: false
      schema:
        type: string
    pagination-before:
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers).
        If specified, the query only searches for results before this cursor. For
        more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      name: before
      required: false
      schema:
        type: string
    per-page:
      description: The number of results per page (max 100). For more information,
        see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      name: per_page
      schema:
        default: 30
        type: integer
    since-user:
      description: A user ID. Only return users with an ID greater than this ID.
      in: query
      name: since
      required: false
      schema:
        type: integer
    username:
      description: The handle for the GitHub user account.
      in: path
      name: username
      required: true
      schema:
        type: string
  responses:
    forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
      description: Forbidden
    not_found:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
      description: Resource not found
    not_modified:
      description: Not modified
    requires_authentication:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
      description: Requires authentication
  schemas:
    basic-error:
      description: Basic Error
      properties:
        documentation_url:
          type: string
        message:
          type: string
        status:
          type: string
        url:
          type: string
      title: Basic Error
      type: object
    empty-object:
      additionalProperties: false
      description: An object without any properties.
      properties: {}
      title: Empty Object
      type: object
    private-user:
      description: Private User
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          format: uri
          type: string
        bio:
          example: There once was...
          nullable: true
          type: string
        blog:
          example: https://github.com/blog
          nullable: true
          type: string
        business_plus:
          type: boolean
        collaborators:
          example: 8
          type: integer
        company:
          example: GitHub
          nullable: true
          type: string
        created_at:
          example: '2008-01-14T04:33:35Z'
          format: date-time
          type: string
        disk_usage:
          example: 10000
          type: integer
        email:
          example: octocat@github.com
          format: email
          nullable: true
          type: string
        events_url:
          example: https://api.github.com/users/octocat/events{/privacy}
          type: string
        followers:
          example: 20
          type: integer
        followers_url:
          example: https://api.github.com/users/octocat/followers
          format: uri
          type: string
        following:
          example: 0
          type: integer
        following_url:
          example: https://api.github.com/users/octocat/following{/other_user}
          type: string
        gists_url:
          example: https://api.github.com/users/octocat/gists{/gist_id}
          type: string
        gravatar_id:
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
          type: string
        hireable:
          nullable: true
          type: boolean
        html_url:
          example: https://github.com/octocat
          format: uri
          type: string
        id:
          example: 1
          format: int64
          type: integer
        ldap_dn:
          type: string
        location:
          example: San Francisco
          nullable: true
          type: string
        login:
          example: octocat
          type: string
        name:
          example: monalisa octocat
          nullable: true
          type: string
        node_id:
          example: MDQ6VXNlcjE=
          type: string
        notification_email:
          example: octocat@github.com
          format: email
          nullable: true
          type: string
        organizations_url:
          example: https://api.github.com/users/octocat/orgs
          format: uri
          type: string
        owned_private_repos:
          example: 100
          type: integer
        plan:
          properties:
            collaborators:
              type: integer
            name:
              type: string
            private_repos:
              type: integer
            space:
              type: integer
          required:
          - collaborators
          - name
          - space
          - private_repos
          type: object
        private_gists:
          example: 81
          type: integer
        public_gists:
          example: 1
          type: integer
        public_repos:
          example: 2
          type: integer
        received_events_url:
          example: https://api.github.com/users/octocat/received_events
          format: uri
          type: string
        repos_url:
          example: https://api.github.com/users/octocat/repos
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_url:
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
          type: string
        subscriptions_url:
          example: https://api.github.com/users/octocat/subscriptions
          format: uri
          type: string
        total_private_repos:
          example: 100
          type: integer
        twitter_username:
          example: monalisa
          nullable: true
          type: string
        two_factor_authentication:
          example: true
          type: boolean
        type:
          example: User
          type: string
        updated_at:
          example: '2008-01-14T04:33:35Z'
          format: date-time
          type: string
        url:
          example: https://api.github.com/users/octocat
          format: uri
          type: string
        user_view_type:
          type: string
      required:
      - avatar_url
      - collaborators
      - created_at
      - disk_usage
      - events_url
      - followers
      - followers_url
      - following
      - following_url
      - gists_url
      - html_url
      - id
      - login
      - node_id
      - organizations_url
      - owned_private_repos
      - private_gists
      - public_gists
      - public_repos
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - total_private_repos
      - two_factor_authentication
      - type
      - updated_at
      - url
      title: Private User
      type: object
    public-user:
      additionalProperties: false
      description: Public User
      properties:
        avatar_url:
          format: uri
          type: string
        bio:
          nullable: true
          type: string
        blog:
          nullable: true
          type: string
        collaborators:
          example: 3
          type: integer
        company:
          nullable: true
          type: string
        created_at:
          format: date-time
          type: string
        disk_usage:
          example: 1
          type: integer
        email:
          format: email
          nullable: true
          type: string
        events_url:
          type: string
        followers:
          type: integer
        followers_url:
          format: uri
          type: string
        following:
          type: integer
        following_url:
          type: string
        gists_url:
          type: string
        gravatar_id:
          nullable: true
          type: string
        hireable:
          nullable: true
          type: boolean
        html_url:
          format: uri
          type: string
        id:
          format: int64
          type: integer
        location:
          nullable: true
          type: string
        login:
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
        notification_email:
          format: email
          nullable: true
          type: string
        organizations_url:
          format: uri
          type: string
        owned_private_repos:
          example: 2
          type: integer
        plan:
          properties:
            collaborators:
              type: integer
            name:
              type: string
            private_repos:
              type: integer
            space:
              type: integer
          required:
          - collaborators
          - name
          - space
          - private_repos
          type: object
        private_gists:
          example: 1
          type: integer
        public_gists:
          type: integer
        public_repos:
          type: integer
        received_events_url:
          format: uri
          type: string
        repos_url:
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_url:
          type: string
        subscriptions_url:
          format: uri
          type: string
        total_private_repos:
          example: 2
          type: integer
        twitter_username:
          nullable: true
          type: string
        type:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
        user_view_type:
          type: string
      required:
      - avatar_url
      - created_at
      - events_url
      - followers
      - followers_url
      - following
      - following_url
      - gists_url
      - html_url
      - id
      - login
      - node_id
      - organizations_url
      - public_gists
      - public_repos
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - updated_at
      - url
      title: Public User
      type: object
    simple-user:
      description: A GitHub user.
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          format: uri
          type: string
        email:
          nullable: true
          type: string
        events_url:
          example: https://api.github.com/users/octocat/events{/privacy}
          type: string
        followers_url:
          example: https://api.github.com/users/octocat/followers
          format: uri
          type: string
        following_url:
          example: https://api.github.com/users/octocat/following{/other_user}
          type: string
        gists_url:
          example: https://api.github.com/users/octocat/gists{/gist_id}
          type: string
        gravatar_id:
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
          type: string
        html_url:
          example: https://github.com/octocat
          format: uri
          type: string
        id:
          example: 1
          format: int64
          type: integer
        login:
          example: octocat
          type: string
        name:
          nullable: true
          type: string
        node_id:
          example: MDQ6VXNlcjE=
          type: string
        organizations_url:
          example: https://api.github.com/users/octocat/orgs
          format: uri
          type: string
        received_events_url:
          example: https://api.github.com/users/octocat/received_events
          format: uri
          type: string
        repos_url:
          example: https://api.github.com/users/octocat/repos
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_at:
          example: '"2020-07-09T00:17:55Z"'
          type: string
        starred_url:
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
          type: string
        subscriptions_url:
          example: https://api.github.com/users/octocat/subscriptions
          format: uri
          type: string
        type:
          example: User
          type: string
        url:
          example: https://api.github.com/users/octocat
          format: uri
          type: string
        user_view_type:
          example: public
          type: string
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - html_url
      - id
      - login
      - node_id
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      title: Simple User
      type: object
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  title: GitHub v3 REST API
  version: 1.1.4
  x-github-plan: api.github.com
openapi: 3.0.3
paths:
  /user:
    get:
      description: OAuth app tokens and personal access tokens (classic) need the
        `user` scope in order for the response to include private profile information.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#get-the-authenticated-user
      operationId: users/get-authenticated
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                discriminator:
                  mapping:
                    private: '#/components/schemas/private-user'
                    public: '#/components/schemas/public-user'
                  propertyName: user_view_type
                oneOf:
                - $ref: '#/components/schemas/private-user'
                - $ref: '#/components/schemas/public-user'
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      summary: Get the authenticated user
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        subcategory: users
  /user/blocks:
    get:
      description: List the users you've blocked on your personal account.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/blocking#list-users-blocked-by-the-authenticated-user
      operationId: users/list-blocked-by-authenticated-user
      parameters:
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/simple-user'
                type: array
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      summary: List users blocked by the authenticated user
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        subcategory: blocking
  /user/{account_id}:
    get:
      description: 'Provides publicly available information about someone with a GitHub
        account. This method takes their durable user `ID` instead of their `login`,
        which can change over time.


        If you are requesting information about an [Enterprise Managed User](https://docs.github.com/enterprise-cloud@latest/admin/managing-iam/understanding-iam-for-enterprises/about-enterprise-managed-users),
        or a GitHub App bot that is installed in an organization that uses Enterprise
        Managed Users, your requests must be authenticated as a user or GitHub App
        that has access to the organization to view that account''s information. If
        you are not authorized, the request will return a `404 Not Found` status.


        The `email` key in the following response is the publicly visible email address
        from your GitHub [profile page](https://github.com/settings/profile). When
        setting up your profile, you can select a primary email address to be public
        which provides an email entry for this endpoint. If you do not set a public
        email address for `email`, then it will have a value of `null`. You only see
        publicly visible email addresses when authenticated with GitHub. For more
        information, see [Authentication](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#authentication).


        The Emails API enables you to list all of your email addresses, and toggle
        a primary email to be visible publicly. For more information, see [Emails
        API](https://docs.github.com/rest/users/emails).'
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#get-a-user-using-their-id
      operationId: users/get-by-id
      parameters:
      - $ref: '#/components/parameters/account-id'
      responses:
        '200':
          content:
            application/json:
              schema:
                discriminator:
                  mapping:
                    private: '#/components/schemas/private-user'
                    public: '#/components/schemas/public-user'
                  propertyName: user_view_type
                oneOf:
                - $ref: '#/components/schemas/private-user'
                - $ref: '#/components/schemas/public-user'
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      summary: Get a user using their ID
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: users
  /users:
    get:
      description: 'Lists all users, in the order that they signed up on GitHub. This
        list includes personal user accounts and organization accounts.


        Note: Pagination is powered exclusively by the `since` parameter. Use the
        [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers)
        to get the URL for the next page of users.'
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#list-users
      operationId: users/list
      parameters:
      - $ref: '#/components/parameters/since-user'
      - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/simple-user'
                type: array
          description: Response
          headers:
            Link:
              example: <https://api.github.com/users?since=135>; rel="next"
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
      summary: List users
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: users
  /users/{username}:
    get:
      description: 'Provides publicly available information about someone with a GitHub
        account.


        If you are requesting information about an [Enterprise Managed User](https://docs.github.com/enterprise-cloud@latest/admin/managing-iam/understanding-iam-for-enterprises/about-enterprise-managed-users),
        or a GitHub App bot that is installed in an organization that uses Enterprise
        Managed Users, your requests must be authenticated as a user or GitHub App
        that has access to the organization to view that account''s information. If
        you are not authorized, the request will return a `404 Not Found` status.


        The `email` key in the following response is the publicly visible email address
        from your GitHub [profile page](https://github.com/settings/profile). When
        setting up your profile, you can select a primary email address to be public
        which provides an email entry for this endpoint. If you do not set a public
        email address for `email`, then it will have a value of `null`. You only see
        publicly visible email addresses when authenticated with GitHub. For more
        information, see [Authentication](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#authentication).


        The Emails API enables you to list all of your email addresses, and toggle
        a primary email to be visible publicly. For more information, see [Emails
        API](https://docs.github.com/rest/users/emails).'
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#get-a-user
      operationId: users/get-by-username
      parameters:
      - $ref: '#/components/parameters/username'
      responses:
        '200':
          content:
            application/json:
              schema:
                discriminator:
                  mapping:
                    private: '#/components/schemas/private-user'
                    public: '#/components/schemas/public-user'
                  propertyName: user_view_type
                oneOf:
                - $ref: '#/components/schemas/private-user'
                - $ref: '#/components/schemas/public-user'
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      summary: Get a user
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: users
  /users/{username}/attestations/{subject_digest}:
    get:
      description: 'List a collection of artifact attestations with a given subject
        digest that are associated with repositories owned by a user.


        The collection of attestations returned by this endpoint is filtered according
        to the authenticated user''s permissions; if the authenticated user cannot
        read a repository, the attestations associated with that repository will not
        be included in the response. In addition, when using a fine-grained access
        token the `attestations:read` permission is required.


        **Please note:** in order to offer meaningful security benefits, an attestation''s
        signature and timestamps **must** be cryptographically verified, and the identity
        of the attestation signer **must** be validated. Attestations can be verified
        using the [GitHub CLI `attestation verify` command](https://cli.github.com/manual/gh_attestation_verify).
        For more information, see [our guide on how to use artifact attestations to
        establish a build''s provenance](https://docs.github.com/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds).'
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/attestations#list-attestations
      operationId: users/list-attestations
      parameters:
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/pagination-before'
      - $ref: '#/components/parameters/pagination-after'
      - $ref: '#/components/parameters/username'
      - description: Subject Digest
        in: path
        name: subject_digest
        required: true
        schema:
          type: string
        x-multi-segment: true
      - description: 'Optional filter for fetching attestations with a given predicate
          type.

          This option accepts `provenance`, `sbom`, or freeform text for custom predicate
          types.'
        in: query
        name: predicate_type
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  attestations:
                    items:
                      properties:
                        bundle:
                          description: 'The attestation''s Sigstore Bundle.

                            Refer to the [Sigstore Bundle Specification](https://github.com/sigstore/protobuf-specs/blob/main/protos/sigstore_bundle.proto)
                            for more information.'
                          properties:
                            dsseEnvelope:
                              additionalProperties: true
                              properties: {}
                              type: object
                            mediaType:
                              type: string
                            verificationMaterial:
                              additionalProperties: true
                              properties: {}
                              type: object
                          type: object
                        bundle_url:
                          type: string
                        repository_id:
                          type: integer
                      type: object
                    type: array
                type: object
          description: Response
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
          description: Response
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      summary: List attestations
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: attestations
servers:
- url: https://api.github.com
x-webhooks:
  branch-protection-configuration-disabled:
    post:
      description: All branch protections were disabled for a repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_configuration
      operationId: branch-protection-configuration/disabled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-configuration-disabled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is a change to branch protection configurations
        for a repository.

        For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."

        For information about using the APIs to manage branch protection rules, see
        "[Branch protection rule](https://docs.github.com/graphql/reference/objects#branchprotectionrule)"
        in the GraphQL documentation or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: branch_protection_configuration
        supported-webhook-types:
        - repository
        - organization
        - app
  branch-protection-configuration-enabled:
    post:
      description: All branch protections were enabled for a repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_configuration
      operationId: branch-protection-configuration/enabled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-configuration-enabled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is a change to branch protection configurations
        for a repository.

        For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."

        For information about using the APIs to manage branch protection rules, see
        "[Branch protection rule](https://docs.github.com/graphql/reference/objects#branchprotectionrule)"
        in the GraphQL documentation or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: branch_protection_configuration
        supported-webhook-types:
        - repository
        - organization
        - app
  branch-protection-rule-created:
    post:
      description: A branch protection rule was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_rule
      operationId: branch-protection-rule/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see [the
        GraphQL documentation](https://docs.github.com/graphql/reference/objects#branchprotectionrule)
        or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: branch_protection_rule
        supported-webhook-types:
        - repository
        - organization
        - app
  branch-protection-rule-deleted:
    post:
      description: A branch protection rule was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_rule
      operationId: branch-protection-rule/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see [the
        GraphQL documentation](https://docs.github.com/graphql/reference/objects#branchprotectionrule)
        or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: branch_protection_rule
        supported-webhook-types:
        - repository
        - organization
        - app
  branch-protection-rule-edited:
    post:
      description: A branch protection rule was edited.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_rule
      operationId: branch-protection-rule/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see [the
        GraphQL documentation](https://docs.github.com/graphql/reference/objects#branchprotectionrule)
        or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: branch_protection_rule
        supported-webhook-types:
        - repository
        - organization
        - app
  check-run-completed:
    post:
      description: A check run was completed, and a conclusion is available.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_run
      operationId: check-run/completed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed-form-encoded'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a check run.
        For information about check runs, see "[Getting started with the Checks API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checkrun)
        or "[Check Runs](https://docs.github.com/rest/checks/runs)" in the REST API
        documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" repository permission. To receive the `rerequested` and `requested_action`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `created`
        and `completed` event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check run was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: check_run
        supported-webhook-types:
        - repository
        - organization
        - app
  check-run-created:
    post:
      description: A new check run was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_run
      operationId: check-run/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created-form-encoded'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a check run.
        For information about check runs, see "[Getting started with the Checks API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checkrun)
        or "[Check Runs](https://docs.github.com/rest/checks/runs)" in the REST API
        documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" repository permission. To receive the `rerequested` and `requested_action`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `created`
        and `completed` event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check run was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: check_run
        supported-webhook-types:
        - repository
        - organization
        - app
  check-run-requested-action:
    post:
      description: A check run completed, and someone requested a followup action
        that your app provides. Only the GitHub App someone requests to perform an
        action will receive the `requested_action` payload. For more information,
        see "[Creating CI tests with the Checks API](https://docs.github.com/developers/apps/guides/creating-ci-tests-with-the-checks-api)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_run
      operationId: check-run/requested-action
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-requested-action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-requested-action-form-encoded'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a check run.
        For information about check runs, see "[Getting started with the Checks API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checkrun)
        or "[Check Runs](https://docs.github.com/rest/checks/runs)" in the REST API
        documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" repository permission. To receive the `rerequested` and `requested_action`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `created`
        and `completed` event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check run was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: check_run
        supported-webhook-types:
        - repository
        - organization
        - app
  check-run-rerequested:
    post:
      description: Someone requested to re-run a check run. Only the GitHub App that
        someone requests to re-run the check will receive the `rerequested` payload.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_run
      operationId: check-run/rerequested
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested-form-encoded'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a check run.
        For information about check runs, see "[Getting started with the Checks API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checkrun)
        or "[Check Runs](https://docs.github.com/rest/checks/runs)" in the REST API
        documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" repository permission. To receive the `rerequested` and `requested_action`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `created`
        and `completed` event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check run was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: check_run
        supported-webhook-types:
        - repository
        - organization
        - app
  check-suite-completed:
    post:
      description: All check runs in a check suite have completed, and a conclusion
        is available.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_suite
      operationId: check-suite/completed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-completed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a check suite.
        For information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checksuite)
        or "[Check Suites](https://docs.github.com/rest/checks/suites)" in the REST
        API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" permission. To receive the `requested` and `rerequested`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `completed`
        event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check suite was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: check_suite
        supported-webhook-types:
        - repository
        - organization
        - app
  check-suite-requested:
    post:
      description: Someone requested to run a check suite. By default, check suites
        are automatically created when you create a check run. For more information,
        see [the GraphQL API documentation for creating a check run](https://docs.github.com/graphql/reference/mutations#createcheckrun)
        or "[Create a check run](https://docs.github.com/rest/checks/runs#create-a-check-run)"
        in the REST API documentation.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_suite
      operationId: check-suite/requested
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-requested'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a check suite.
        For information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checksuite)
        or "[Check Suites](https://docs.github.com/rest/checks/suites)" in the REST
        API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" permission. To receive the `requested` and `rerequested`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `completed`
        event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check suite was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: check_suite
        supported-webhook-types:
        - repository
        - organization
        - app
  check-suite-rerequested:
    post:
      description: Someone requested to re-run the check runs in a check suite. For
        more information, see [the GraphQL API documentation for creating a check
        suite](https://docs.github.com/graphql/reference/mutations#createchecksuite)
        or "[Create a check suite](https://docs.github.com/rest/checks/suites#create-a-check-suite)"
        in the REST API documentation.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_suite
      operationId: check-suite/rerequested
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-rerequested'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a check suite.
        For information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checksuite)
        or "[Check Suites](https://docs.github.com/rest/checks/suites)" in the REST
        API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" permission. To receive the `requested` and `rerequested`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `completed`
        event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check suite was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: check_suite
        supported-webhook-types:
        - repository
        - organization
        - app
  code-scanning-alert-appeared-in-branch:
    post:
      description: A previously created code scanning alert appeared in another branch.
        This can happen when a branch is merged into or created from a branch with
        a pre-existing code scanning alert.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      operationId: code-scanning-alert/appeared-in-branch
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-appeared-in-branch'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: code_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  code-scanning-alert-closed-by-user:
    post:
      description: Someone closed a code scanning alert.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      operationId: code-scanning-alert/closed-by-user
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-closed-by-user'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: code_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  code-scanning-alert-created:
    post:
      description: A code scanning alert was created in a repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      operationId: code-scanning-alert/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: code_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  code-scanning-alert-fixed:
    post:
      description: A code scanning alert was fixed in a branch by a commit.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      operationId: code-scanning-alert/fixed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-fixed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: code_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  code-scanning-alert-reopened:
    post:
      description: A previously fixed code scanning alert reappeared in a branch.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      operationId: code-scanning-alert/reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: code_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  code-scanning-alert-reopened-by-user:
    post:
      description: Someone reopened a code scanning alert.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      operationId: code-scanning-alert/reopened-by-user
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-reopened-by-user'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: code_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  commit-comment-created:
    post:
      description: Someone commented on a commit.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#commit_comment
      operationId: commit-comment/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-commit-comment-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to commit comments.
        For more information about commit comments, see "[Commenting on a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request)."
        For information about the APIs to manage commit comments, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#commitcomment)
        or "[Commit comments](https://docs.github.com/rest/commits/comments)" in the
        REST API documentation.


        For activity relating to comments on pull request reviews, use the `pull_request_review_comment`
        event. For activity relating to issue comments, use the `issue_comment` event.
        For activity relating to discussion comments, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: commit_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  create:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#create
      operationId: create
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-create'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when a Git branch or tag is created.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.


        **Notes**:

        - This event will not occur when more than three tags are created at once.

        - Payloads are capped at 25 MB. If an event generates a larger payload, GitHub
        will not deliver a payload for that webhook event. This may happen, for example,
        if many branches or tags are pushed at once. We suggest monitoring your payload
        size to ensure delivery.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: create
        supported-webhook-types:
        - repository
        - organization
        - app
  custom-property-created:
    post:
      description: A new custom property was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom_property
      operationId: custom-property/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a custom property.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties, see "[Custom properties](https://docs.github.com/rest/orgs/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: custom_property
        supported-webhook-types:
        - business
        - organization
        - app
  custom-property-deleted:
    post:
      description: A custom property was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom_property
      operationId: custom-property/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a custom property.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties, see "[Custom properties](https://docs.github.com/rest/orgs/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: custom_property
        supported-webhook-types:
        - business
        - organization
        - app
  custom-property-promoted-to-enterprise:
    post:
      description: A custom property was promoted to an enterprise.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom_property
      operationId: custom-property/promote-to-enterprise
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-promoted-to-enterprise'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a custom property.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties, see "[Custom properties](https://docs.github.com/rest/orgs/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: custom_property
        supported-webhook-types:
        - business
        - organization
        - app
  custom-property-updated:
    post:
      description: A custom property was updated.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom_property
      operationId: custom-property/updated
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-updated'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a custom property.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties, see "[Custom properties](https://docs.github.com/rest/orgs/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: custom_property
        supported-webhook-types:
        - business
        - organization
        - app
  custom-property-values-updated:
    post:
      description: The custom property values of a repository were updated.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom-property-values
      operationId: custom-property-values/updated
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-values-updated'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to custom property
        values for a repository.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties for a repository,
        see "[Custom properties](https://docs.github.com/rest/repos/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: custom-property-values
        supported-webhook-types:
        - repository
        - organization
        - app
  delete:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#delete
      operationId: delete
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-delete'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when a Git branch or tag is deleted. To subscribe
        to all pushes to a repository, including

        branch and tag deletions, use the [`push`](#push) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.


        > [!NOTE]

        > This event will not occur when more than three tags are deleted at once.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: delete
        supported-webhook-types:
        - repository
        - organization
        - app
  dependabot-alert-auto-dismissed:
    post:
      description: A Dependabot alert was automatically closed by a Dependabot auto-triage
        rule.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/auto-dismissed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-auto-dismissed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  dependabot-alert-auto-reopened:
    post:
      description: A Dependabot alert, that had been automatically closed by a Dependabot
        auto-triage rule, was automatically reopened because the alert metadata or
        rule changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/auto-reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-auto-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  dependabot-alert-created:
    post:
      description: A manifest file change introduced a vulnerable dependency, or a
        GitHub Security Advisory was published and an existing dependency was found
        to be vulnerable.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  dependabot-alert-dismissed:
    post:
      description: A Dependabot alert was manually closed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/dismissed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-dismissed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  dependabot-alert-fixed:
    post:
      description: A manifest file change removed a vulnerability.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/fixed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-fixed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  dependabot-alert-reintroduced:
    post:
      description: A manifest file change introduced a vulnerable dependency that
        had previously been fixed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/reintroduced
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reintroduced'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  dependabot-alert-reopened:
    post:
      description: A Dependabot alert was manually reopened.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  deploy-key-created:
    post:
      description: A deploy key was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deploy_key
      operationId: deploy-key/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to deploy keys.
        For more information, see "[Managing deploy keys](https://docs.github.com/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deploykey)
        or "[Deploy keys](https://docs.github.com/rest/deploy-keys)" in the REST API
        documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: deploy_key
        supported-webhook-types:
        - repository
        - organization
        - app
  deploy-key-deleted:
    post:
      description: A deploy key was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deploy_key
      operationId: deploy-key/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to deploy keys.
        For more information, see "[Managing deploy keys](https://docs.github.com/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deploykey)
        or "[Deploy keys](https://docs.github.com/rest/deploy-keys)" in the REST API
        documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: deploy_key
        supported-webhook-types:
        - repository
        - organization
        - app
  deployment-created:
    post:
      description: A deployment was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment
      operationId: deployment/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to deployments.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment status, use the `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: deployment
        supported-webhook-types:
        - repository
        - organization
        - app
  deployment-protection-rule-requested:
    post:
      description: A deployment protection rule was requested for an environment.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_protection_rule
      operationId: deployment-protection-rule/requested
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-protection-rule-requested'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to deployment protection
        rules. For more information, see "[Using environments for deployment](https://docs.github.com/actions/deployment/targeting-different-environments/using-environments-for-deployment#environment-protection-rules)."
        For information about the API to manage deployment protection rules, see [the
        REST API documentation](https://docs.github.com/rest/deployments/environments).


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: deployment_protection_rule
        supported-webhook-types:
        - app
  deployment-review-approved:
    post:
      description: A deployment review was approved.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_review
      operationId: deployment-review/approved
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-approved'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment creation or deployment status, use the
        `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: deployment_review
        supported-webhook-types:
        - app
  deployment-review-rejected:
    post:
      description: A deployment review was rejected.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_review
      operationId: deployment-review/rejected
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-rejected'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment creation or deployment status, use the
        `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: deployment_review
        supported-webhook-types:
        - app
  deployment-review-requested:
    post:
      description: A deployment review was requested.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_review
      operationId: deployment-review/requested
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-requested'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment creation or deployment status, use the
        `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: deployment_review
        supported-webhook-types:
        - app
  deployment-status-created:
    post:
      description: A new deployment status was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_status
      operationId: deployment-status/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-status-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to deployment statuses.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment creation, use the `deployment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.


        > [!NOTE]

        > A webhook event is not fired for deployment statuses with an `inactive`
        state.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: deployment_status
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-answered:
    post:
      description: A comment on the discussion was marked as the answer.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/answered
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-answered'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-category-changed:
    post:
      description: The category of a discussion was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/category-changed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-category-changed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-closed:
    post:
      description: A discussion was closed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/closed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: discussions
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-closed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-comment-created:
    post:
      description: A comment on a discussion was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion_comment
      operationId: discussion-comment/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a comment on
        a discussion. For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a discussion,
        use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-comment-deleted:
    post:
      description: A comment on a discussion was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion_comment
      operationId: discussion-comment/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a comment on
        a discussion. For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a discussion,
        use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-comment-edited:
    post:
      description: A comment on a discussion was edited.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion_comment
      operationId: discussion-comment/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a comment on
        a discussion. For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a discussion,
        use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-created:
    post:
      description: A discussion was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-deleted:
    post:
      description: A discussion was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-edited:
    post:
      description: The title or body on a discussion was edited, or the category of
        the discussion was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-labeled:
    post:
      description: A label was added to a discussion.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/labeled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-labeled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-locked:
    post:
      description: A discussion was locked.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/locked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-locked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-pinned:
    post:
      description: A discussion was pinned.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/pinned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-pinned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-reopened:
    post:
      description: A discussion was reopened.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: discussions
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-transferred:
    post:
      description: A discussion was transferred to another repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/transferred
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-transferred'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-unanswered:
    post:
      description: A comment on the discussion was unmarked as the answer.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/unanswered
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unanswered'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-unlabeled:
    post:
      description: A label was removed from a discussion.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/unlabeled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlabeled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-unlocked:
    post:
      description: A discussion was unlocked.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/unlocked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlocked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  discussion-unpinned:
    post:
      description: A discussion was unpinned.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/unpinned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unpinned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
  fork:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#fork
      operationId: fork
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-fork'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when someone forks a repository. For more information,
        see "[Fork a repo](https://docs.github.com/get-started/quickstart/fork-a-repo)."
        For information about the API to manage forks, see "[Forks](https://docs.github.com/rest/repos/forks)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: fork
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  github-app-authorization-revoked:
    post:
      description: Someone revoked their authorization of a GitHub App.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#github_app_authorization
      operationId: github-app-authorization/revoked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-github-app-authorization-revoked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when a user revokes their authorization of a GitHub
        App. For more information, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the API to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.


        A GitHub App receives this webhook by default and cannot unsubscribe from
        this event.


        Anyone can revoke their authorization of a GitHub App from their [GitHub account
        settings page](https://github.com/settings/apps/authorizations). Revoking
        the authorization of a GitHub App does not uninstall the GitHub App. You should
        program your GitHub App so that when it receives this webhook, it stops calling
        the API on behalf of the person who revoked the token. If your GitHub App
        continues to use a revoked access token, it will receive the `401 Bad Credentials`
        error. For details about requests with a user access token, which require
        GitHub App authorization, see "[Authenticating with a GitHub App on behalf
        of a user](https://docs.github.com/apps/creating-github-apps/authenticating-with-a-github-app/authenticating-with-a-github-app-on-behalf-of-a-user)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: github_app_authorization
        supported-webhook-types:
        - app
  gollum:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#gollum
      operationId: gollum
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-gollum'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when someone creates or updates a wiki page. For
        more information, see "[About wikis](https://docs.github.com/communities/documenting-your-project-with-wikis/about-wikis)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: gollum
        supported-webhook-types:
        - repository
        - organization
        - app
  installation-created:
    post:
      description: Someone installed a GitHub App on a user or organization account.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      operationId: installation/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: installation
        supported-webhook-types:
        - app
  installation-deleted:
    post:
      description: Someone uninstalled a GitHub App from their user or organization
        account.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      operationId: installation/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: installation
        supported-webhook-types:
        - app
  installation-new-permissions-accepted:
    post:
      description: Someone granted new permissions to a GitHub App.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      operationId: installation/new-permissions-accepted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-new-permissions-accepted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: installation
        supported-webhook-types:
        - app
  installation-repositories-added:
    post:
      description: A GitHub App installation was granted access to one or more repositories.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation_repositories
      operationId: installation-repositories/added
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-added'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event by
        default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: installation_repositories
        supported-webhook-types:
        - app
  installation-repositories-removed:
    post:
      description: Access to one or more repositories was revoked for a GitHub App
        installation.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation_repositories
      operationId: installation-repositories/removed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-removed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event by
        default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: installation_repositories
        supported-webhook-types:
        - app
  installation-suspend:
    post:
      description: Someone blocked access by a GitHub App to their user or organization
        account.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      operationId: installation/suspend
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-suspend'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: installation
        supported-webhook-types:
        - app
  installation-target-renamed:
    post:
      description: Somebody renamed the user or organization account that a GitHub
        App is installed on.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation_target
      operationId: installation-target/renamed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-target-renamed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: This event occurs when there is activity relating to the user or organization
        account that a GitHub App is installed on. For more information, see "[About
        apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: installation_target
        supported-webhook-types:
        - app
  installation-unsuspend:
    post:
      description: A GitHub App that was blocked from accessing a user or organization
        account was given access the account again.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      operationId: installation/unsuspend
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-unsuspend'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: installation
        supported-webhook-types:
        - app
  issue-comment-created:
    post:
      description: A comment on an issue or pull request was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issue_comment
      operationId: issue-comment/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a comment on
        an issue or pull request. For more information about issues and pull requests,
        see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the GraphQL
        documentation](https://docs.github.com/graphql/reference/objects#issuecomment)
        or "[Issue comments](https://docs.github.com/rest/issues/comments)" in the
        REST API documentation.


        For activity relating to an issue as opposed to comments on an issue, use
        the `issue` event. For activity related to pull request reviews or pull request
        review comments, use the `pull_request_review` or `pull_request_review_comment`
        events. For more information about the different types of pull request comments,
        see "[Working with comments](https://docs.github.com/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issue_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  issue-comment-deleted:
    post:
      description: A comment on an issue or pull request was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issue_comment
      operationId: issue-comment/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a comment on
        an issue or pull request. For more information about issues and pull requests,
        see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the GraphQL
        documentation](https://docs.github.com/graphql/reference/objects#issuecomment)
        or "[Issue comments](https://docs.github.com/rest/issues/comments)" in the
        REST API documentation.


        For activity relating to an issue as opposed to comments on an issue, use
        the `issue` event. For activity related to pull request reviews or pull request
        review comments, use the `pull_request_review` or `pull_request_review_comment`
        events. For more information about the different types of pull request comments,
        see "[Working with comments](https://docs.github.com/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issue_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  issue-comment-edited:
    post:
      description: A comment on an issue or pull request was edited.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issue_comment
      operationId: issue-comment/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a comment on
        an issue or pull request. For more information about issues and pull requests,
        see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the GraphQL
        documentation](https://docs.github.com/graphql/reference/objects#issuecomment)
        or "[Issue comments](https://docs.github.com/rest/issues/comments)" in the
        REST API documentation.


        For activity relating to an issue as opposed to comments on an issue, use
        the `issue` event. For activity related to pull request reviews or pull request
        review comments, use the `pull_request_review` or `pull_request_review_comment`
        events. For more information about the different types of pull request comments,
        see "[Working with comments](https://docs.github.com/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issue_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-assigned:
    post:
      description: An issue was assigned to a user.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/assigned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-assigned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-closed:
    post:
      description: An issue was closed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/closed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-closed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-deleted:
    post:
      description: An issue was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-demilestoned:
    post:
      description: An issue was removed from a milestone.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/demilestoned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-demilestoned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-edited:
    post:
      description: The title or body on an issue was edited.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-labeled:
    post:
      description: A label was added to an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/labeled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-labeled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-locked:
    post:
      description: Conversation on an issue was locked. For more information, see
        "[Locking conversations](https://docs.github.com/communities/moderating-comments-and-conversations/locking-conversations)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/locked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-locked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-milestoned:
    post:
      description: An issue was added to a milestone.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/milestoned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-milestoned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-opened:
    post:
      description: An issue was created. When a closed issue is reopened, the action
        will be `reopened` instead.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/opened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-opened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-pinned:
    post:
      description: An issue was pinned to a repository. For more information, see
        "[Pinning an issue to your repository](https://docs.github.com/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/pinned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-pinned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-reopened:
    post:
      description: A closed issue was reopened.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-transferred:
    post:
      description: An issue was transferred to another repository. For more information,
        see "[Transferring an issue to another repository](https://docs.github.com/issues/tracking-your-work-with-issues/transferring-an-issue-to-another-repository)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/transferred
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-transferred'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-typed:
    post:
      description: An issue type was added to an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/typed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-typed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-unassigned:
    post:
      description: A user was unassigned from an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/unassigned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unassigned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-unlabeled:
    post:
      description: A label was removed from an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/unlabeled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlabeled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-unlocked:
    post:
      description: Conversation on an issue was locked. For more information, see
        "[Locking conversations](https://docs.github.com/communities/moderating-comments-and-conversations/locking-conversations)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/unlocked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlocked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-unpinned:
    post:
      description: An issue was unpinned from a repository. For more information,
        see "[Pinning an issue to your repository](https://docs.github.com/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/unpinned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unpinned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-untyped:
    post:
      description: An issue type was removed from an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/untyped
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-untyped'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
  label-created:
    post:
      description: A label was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#label
      operationId: label/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to labels. For more
        information, see "[Managing labels](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#label)
        or "[Labels](https://docs.github.com/rest/issues/labels)" in the REST API
        documentation.


        If you want to receive an event when a label is added to or removed from an
        issue, pull request, or discussion, use the `labeled` or `unlabeled` action
        type for the `issues`, `pull_request`, or `discussion` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: label
        supported-webhook-types:
        - repository
        - organization
        - app
  label-deleted:
    post:
      description: A label was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#label
      operationId: label/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to labels. For more
        information, see "[Managing labels](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#label)
        or "[Labels](https://docs.github.com/rest/issues/labels)" in the REST API
        documentation.


        If you want to receive an event when a label is added to or removed from an
        issue, pull request, or discussion, use the `labeled` or `unlabeled` action
        type for the `issues`, `pull_request`, or `discussion` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: label
        supported-webhook-types:
        - repository
        - organization
        - app
  label-edited:
    post:
      description: A label's name, description, or color was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#label
      operationId: label/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to labels. For more
        information, see "[Managing labels](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#label)
        or "[Labels](https://docs.github.com/rest/issues/labels)" in the REST API
        documentation.


        If you want to receive an event when a label is added to or removed from an
        issue, pull request, or discussion, use the `labeled` or `unlabeled` action
        type for the `issues`, `pull_request`, or `discussion` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: label
        supported-webhook-types:
        - repository
        - organization
        - app
  marketplace-purchase-cancelled:
    post:
      description: Someone cancelled a GitHub Marketplace plan, and the last billing
        cycle has ended. The change will take effect on the account immediately.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      operationId: marketplace-purchase/cancelled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-cancelled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: marketplace_purchase
        supported-webhook-types:
        - marketplace
  marketplace-purchase-changed:
    post:
      description: Someone upgraded or downgraded a GitHub Marketplace plan, and the
        last billing cycle has ended. The change will take effect on the account immediately.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      operationId: marketplace-purchase/changed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-changed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: marketplace_purchase
        supported-webhook-types:
        - marketplace
  marketplace-purchase-pending-change:
    post:
      description: Someone downgraded or cancelled a GitHub Marketplace plan. The
        new plan or cancellation will take effect at the end of the current billing
        cycle. When the change takes effect, the `changed` or `cancelled` event will
        be sent.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      operationId: marketplace-purchase/pending-change
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-pending-change'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: marketplace_purchase
        supported-webhook-types:
        - marketplace
  marketplace-purchase-pending-change-cancelled:
    post:
      description: Someone cancelled a pending change to a GitHub Marketplace plan.
        Pending changes include plan cancellations and downgrades that will take effect
        at the end of a billing cycle.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      operationId: marketplace-purchase/pending-change-cancelled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-pending-change-cancelled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: marketplace_purchase
        supported-webhook-types:
        - marketplace
  marketplace-purchase-purchased:
    post:
      description: Someone purchased a GitHub Marketplace plan. The change will take
        effect on the account immediately.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      operationId: marketplace-purchase/purchased
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-purchased'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: marketplace_purchase
        supported-webhook-types:
        - marketplace
  member-added:
    post:
      description: A GitHub user accepted an invitation to a repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#member
      operationId: member/added
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-added'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to collaborators
        in a repository. For more information, see "[Adding outside collaborators
        to repositories in your organization](https://docs.github.com/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#repositorycollaboratorconnection)
        or "[Collaborators](https://docs.github.com/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: member
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  member-edited:
    post:
      description: Permissions were changed for a collaborator on a repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#member
      operationId: member/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to collaborators
        in a repository. For more information, see "[Adding outside collaborators
        to repositories in your organization](https://docs.github.com/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#repositorycollaboratorconnection)
        or "[Collaborators](https://docs.github.com/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: member
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  member-removed:
    post:
      description: A collaborator was removed from a repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#member
      operationId: member/removed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-removed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to collaborators
        in a repository. For more information, see "[Adding outside collaborators
        to repositories in your organization](https://docs.github.com/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#repositorycollaboratorconnection)
        or "[Collaborators](https://docs.github.com/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: member
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  membership-added:
    post:
      description: An organization member was added to a team.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#membership
      operationId: membership/added
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-added'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to team membership.
        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#team)
        or "[Team members](https://docs.github.com/rest/teams/members)" in the REST
        API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: membership
        supported-webhook-types:
        - organization
        - business
        - app
  membership-removed:
    post:
      description: An organization member was removed from a team.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#membership
      operationId: membership/removed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-removed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to team membership.
        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#team)
        or "[Team members](https://docs.github.com/rest/teams/members)" in the REST
        API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: membership
        supported-webhook-types:
        - organization
        - business
        - app
  merge-group-checks-requested:
    post:
      description: 'Status checks were requested for a merge group. This happens when
        a merge group is created or added to by the merge queue because a pull request
        was queued.


        When you receive this event, you should perform checks on the head SHA and
        report status back using check runs or commit statuses.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#merge_group
      operationId: merge-group/checks-requested
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-merge-group-checks-requested'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a merge group
        in a merge queue. For more information, see "[Managing a merge queue](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Merge queues" repository permission.'
      tags:
      - merge-queue
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: merge_group
        supported-webhook-types:
        - app
  merge-group-destroyed:
    post:
      description: 'The merge queue groups pull requests together to be merged. This
        event indicates that one of those merge groups was destroyed. This happens
        when a pull request is removed from the queue: any group containing that pull
        request is also destroyed.


        When you receive this event, you may want to cancel any checks that are running
        on the head SHA to avoid wasting computing resources on a merge group that
        will not be used.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#merge_group
      operationId: merge-group/destroyed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-merge-group-destroyed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a merge group
        in a merge queue. For more information, see "[Managing a merge queue](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Merge queues" repository permission.'
      tags:
      - merge-queue
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: merge_group
        supported-webhook-types:
        - app
  meta-deleted:
    post:
      description: The webhook was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#meta
      operationId: meta/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-meta-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a webhook itself.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Meta" app permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: meta
        supported-webhook-types:
        - marketplace
        - business
        - repository
        - organization
        - app
  milestone-closed:
    post:
      description: A milestone was closed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      operationId: milestone/closed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-closed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: milestone
        supported-webhook-types:
        - repository
        - organization
        - app
  milestone-created:
    post:
      description: A milestone was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      operationId: milestone/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: milestone
        supported-webhook-types:
        - repository
        - organization
        - app
  milestone-deleted:
    post:
      description: A milestone was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      operationId: milestone/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: milestone
        supported-webhook-types:
        - repository
        - organization
        - app
  milestone-edited:
    post:
      description: A milestone was edited.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      operationId: milestone/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: milestone
        supported-webhook-types:
        - repository
        - organization
        - app
  milestone-opened:
    post:
      description: A milestone was opened.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      operationId: milestone/opened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-opened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: milestone
        supported-webhook-types:
        - repository
        - organization
        - app
  org-block-blocked:
    post:
      description: A user was blocked from the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#org_block
      operationId: org-block/blocked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-org-block-blocked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when organization owners or moderators block or
        unblock a non-member from collaborating on the organization''s repositories.
        For more information, see "[Blocking a user from your organization](https://docs.github.com/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization)."
        For information about the APIs to manage blocked users, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#userblockedevent)
        or "[Blocking users](https://docs.github.com/rest/orgs/blocking)" in the REST
        API documentation.


        If you want to receive an event when members are added or removed from an
        organization, use the `organization` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: org_block
        supported-webhook-types:
        - organization
        - business
        - app
  org-block-unblocked:
    post:
      description: A previously blocked user was unblocked from the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#org_block
      operationId: org-block/unblocked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-org-block-unblocked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when organization owners or moderators block or
        unblock a non-member from collaborating on the organization''s repositories.
        For more information, see "[Blocking a user from your organization](https://docs.github.com/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization)."
        For information about the APIs to manage blocked users, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#userblockedevent)
        or "[Blocking users](https://docs.github.com/rest/orgs/blocking)" in the REST
        API documentation.


        If you want to receive an event when members are added or removed from an
        organization, use the `organization` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: org_block
        supported-webhook-types:
        - organization
        - business
        - app
  organization-deleted:
    post:
      description: An organization was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      operationId: organization/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: organization
        supported-webhook-types:
        - organization
        - business
        - app
  organization-member-added:
    post:
      description: A member accepted an invitation to join an organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      operationId: organization/member-added
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-added'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: organization
        supported-webhook-types:
        - organization
        - business
        - app
  organization-member-invited:
    post:
      description: A member was invited to join the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      operationId: organization/member-invited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-invited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: organization
        supported-webhook-types:
        - organization
        - business
        - app
  organization-member-removed:
    post:
      description: A member was removed from the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      operationId: organization/member-removed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-removed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: organization
        supported-webhook-types:
        - organization
        - business
        - app
  organization-renamed:
    post:
      description: The name of an organization was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      operationId: organization/renamed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-renamed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: organization
        supported-webhook-types:
        - organization
        - business
        - app
  package-published:
    post:
      description: A package was published to a registry.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#package
      operationId: package/published
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-published'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub Packages](https://docs.github.com/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#package)
        or "[Packages](https://docs.github.com/rest/packages)" in the REST API documentation.


        To install this event on a GitHub App, the app must have at least read-level
        access for the "Packages" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: package
        supported-webhook-types:
        - repository
        - organization
        - app
  package-updated:
    post:
      description: A previously published package was updated.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#package
      operationId: package/updated
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-updated'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub Packages](https://docs.github.com/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#package)
        or "[Packages](https://docs.github.com/rest/packages)" in the REST API documentation.


        To install this event on a GitHub App, the app must have at least read-level
        access for the "Packages" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: package
        supported-webhook-types:
        - repository
        - organization
        - app
  page-build:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#page_build
      operationId: page-build
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-page-build'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is an attempted build of a GitHub Pages
        site. This event occurs regardless of whether the build is successful. For
        more information, see "[Configuring a publishing source for your GitHub Pages
        site](https://docs.github.com/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site)."
        For information about the API to manage GitHub Pages, see "[Pages](https://docs.github.com/rest/pages)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pages" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: page_build
        supported-webhook-types:
        - repository
        - organization
        - app
  personal-access-token-request-approved:
    post:
      description: A fine-grained personal access token request was approved.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#personal_access_token_request
      operationId: personal-access-token-request/approved
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: personal_access_token_request
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: integration
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-personal-access-token-request-approved'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a request for
        a fine-grained personal access token to access resources that belong to a
        resource owner that requires approval for token access. For more information,
        see "[Creating a personal access token](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Personal access token requests" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: personal_access_token_request
        supported-webhook-types:
        - app
        - organization
  personal-access-token-request-cancelled:
    post:
      description: A fine-grained personal access token request was cancelled by the
        requester.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#personal_access_token_request
      operationId: personal-access-token-request/cancelled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: personal_access_token_request
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: integration
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-personal-access-token-request-cancelled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a request for
        a fine-grained personal access token to access resources that belong to a
        resource owner that requires approval for token access. For more information,
        see "[Creating a personal access token](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Personal access token requests" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: personal_access_token_request
        supported-webhook-types:
        - app
        - organization
  personal-access-token-request-created:
    post:
      description: A fine-grained personal access token request was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#personal_access_token_request
      operationId: personal-access-token-request/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: personal_access_token_request
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: integration
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-personal-access-token-request-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a request for
        a fine-grained personal access token to access resources that belong to a
        resource owner that requires approval for token access. For more information,
        see "[Creating a personal access token](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Personal access token requests" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: personal_access_token_request
        supported-webhook-types:
        - app
        - organization
  personal-access-token-request-denied:
    post:
      description: A fine-grained personal access token request was denied.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#personal_access_token_request
      operationId: personal-access-token-request/denied
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: personal_access_token_request
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: integration
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-personal-access-token-request-denied'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a request for
        a fine-grained personal access token to access resources that belong to a
        resource owner that requires approval for token access. For more information,
        see "[Creating a personal access token](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Personal access token requests" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: personal_access_token_request
        supported-webhook-types:
        - app
        - organization
  ping:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#ping
      operationId: ping
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-ping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-ping-form-encoded'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: This event occurs when you create a new webhook. The ping event is
        a confirmation from GitHub that you configured the webhook correctly.
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: ping
        supported-webhook-types:
        - repository
        - organization
        - app
        - business
        - marketplace
  project-card-converted:
    post:
      description: A note in a project (classic) was converted to an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/converted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-converted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_card
        supported-webhook-types:
        - repository
        - organization
        - app
  project-card-created:
    post:
      description: A card was added to a project (classic).
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_card
        supported-webhook-types:
        - repository
        - organization
        - app
  project-card-deleted:
    post:
      description: A card on a project (classic) was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_card
        supported-webhook-types:
        - repository
        - organization
        - app
  project-card-edited:
    post:
      description: A note on a project (classic) was edited.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_card
        supported-webhook-types:
        - repository
        - organization
        - app
  project-card-moved:
    post:
      description: A card on a project (classic) was moved to another column or to
        another position in its column.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/moved
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-moved'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_card
        supported-webhook-types:
        - repository
        - organization
        - app
  project-closed:
    post:
      description: A project (classic) was closed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      operationId: project/closed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-closed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project
        supported-webhook-types:
        - repository
        - organization
        - app
  project-column-created:
    post:
      description: A column was added to a project (classic).
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_column
      operationId: project-column/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a card on a project (classic),
        use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_column
        supported-webhook-types:
        - repository
        - organization
        - app
  project-column-deleted:
    post:
      description: A column was deleted from a project (classic).
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_column
      operationId: project-column/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a card on a project (classic),
        use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_column
        supported-webhook-types:
        - repository
        - organization
        - app
  project-column-edited:
    post:
      description: The name of a column on a project (classic) was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_column
      operationId: project-column/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a card on a project (classic),
        use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_column
        supported-webhook-types:
        - repository
        - organization
        - app
  project-column-moved:
    post:
      description: A column was moved to a new position on a project (classic).
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_column
      operationId: project-column/moved
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-moved'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a card on a project (classic),
        use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project_column
        supported-webhook-types:
        - repository
        - organization
        - app
  project-created:
    post:
      description: A project (classic) was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      operationId: project/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project
        supported-webhook-types:
        - repository
        - organization
        - app
  project-deleted:
    post:
      description: A project (classic) was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      operationId: project/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project
        supported-webhook-types:
        - repository
        - organization
        - app
  project-edited:
    post:
      description: The name or description of a project (classic) was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      operationId: project/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project
        supported-webhook-types:
        - repository
        - organization
        - app
  project-reopened:
    post:
      description: A project (classic) was closed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      operationId: project/reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: project
        supported-webhook-types:
        - repository
        - organization
        - app
  projects-v2-closed:
    post:
      description: A project in the organization was closed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      operationId: projects-v2/closed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-closed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2
        supported-webhook-types:
        - organization
  projects-v2-created:
    post:
      description: A project in the organization was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      operationId: projects-v2/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2
        supported-webhook-types:
        - organization
  projects-v2-deleted:
    post:
      description: A project in the organization was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      operationId: projects-v2/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2
        supported-webhook-types:
        - organization
  projects-v2-edited:
    post:
      description: The title, description, or README of a project in the organization
        was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      operationId: projects-v2/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2
        supported-webhook-types:
        - organization
  projects-v2-item-archived:
    post:
      description: An item on an organization project was archived. For more information,
        see "[Archiving items from your project](https://docs.github.com/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      operationId: projects-v2-item/archived
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-item
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-archived'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
  projects-v2-item-converted:
    post:
      description: A draft issue in an organization project was converted to an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      operationId: projects-v2-item/converted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-item
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-converted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
  projects-v2-item-created:
    post:
      description: An item was added to a project in the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      operationId: projects-v2-item/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-item
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
  projects-v2-item-deleted:
    post:
      description: An item was deleted from a project in the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      operationId: projects-v2-item/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-item
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
  projects-v2-item-edited:
    post:
      description: The values or state of an item in an organization project were
        changed. For example, the value of a field was updated, the body of a draft
        issue was changed, or a draft issue was converted to an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      operationId: projects-v2-item/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-item
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
  projects-v2-item-reordered:
    post:
      description: The position of an item in an organization project was changed.
        For example, an item was moved above or below another item in the table or
        board layout.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      operationId: projects-v2-item/reordered
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-item
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-reordered'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
  projects-v2-item-restored:
    post:
      description: An archived item on an organization project was restored from the
        archive. For more information, see "[Archiving items from your project](https://docs.github.com/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      operationId: projects-v2-item/restored
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-item
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-restored'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
  projects-v2-reopened:
    post:
      description: A project in the organization was reopened.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      operationId: projects-v2/reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2
        supported-webhook-types:
        - organization
  projects-v2-status-update-created:
    post:
      description: A status update was added to a project in the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_status_update
      operationId: projects-v2-status-update/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-status-update
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-status-update-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a status update
        on an organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."


        For activity relating to a project, use the `projects_v2` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > To share feedback about projects webhooks with GitHub, see the [Projects
        webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_status_update
        supported-webhook-types:
        - organization
  projects-v2-status-update-deleted:
    post:
      description: A status update was removed from a project in the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_status_update
      operationId: projects-v2-status-update/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-status-update
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-status-update-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a status update
        on an organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."


        For activity relating to a project, use the `projects_v2` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > To share feedback about projects webhooks with GitHub, see the [Projects
        webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_status_update
        supported-webhook-types:
        - organization
  projects-v2-status-update-edited:
    post:
      description: A status update was edited on a project in the organization.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_status_update
      operationId: projects-v2-status-update/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: project-v2-status-update
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-status-update-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a status update
        on an organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."


        For activity relating to a project, use the `projects_v2` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > To share feedback about projects webhooks with GitHub, see the [Projects
        webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_status_update
        supported-webhook-types:
        - organization
  public:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#public
      operationId: public
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-public'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when repository visibility changes from private
        to public. For more information, see "[Setting repository visibility](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/setting-repository-visibility)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: public
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-assigned:
    post:
      description: A pull request was assigned to a user.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/assigned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-assigned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-auto-merge-disabled:
    post:
      description: Auto merge was disabled for a pull request. For more information,
        see "[Automatically merging a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/auto-merge-disabled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-disabled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-auto-merge-enabled:
    post:
      description: Auto merge was enabled for a pull request. For more information,
        see "[Automatically merging a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/auto-merge-enabled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-enabled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-closed:
    post:
      description: A pull request was closed. If `merged` is false in the webhook
        payload, the pull request was closed with unmerged commits. If `merged` is
        true in the webhook payload, the pull request was merged.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/closed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-closed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-converted-to-draft:
    post:
      description: A pull request was converted to a draft. For more information,
        see "[Changing the stage of a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/converted-to-draft
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-converted-to-draft'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-demilestoned:
    post:
      description: A pull request was removed from a milestone.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/demilestoned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-demilestoned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-dequeued:
    post:
      description: A pull request was removed from the merge queue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/dequeued
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-dequeued'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-edited:
    post:
      description: The title or body of a pull request was edited, or the base branch
        of a pull request was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-enqueued:
    post:
      description: A pull request was added to the merge queue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/enqueued
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-enqueued'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-labeled:
    post:
      description: A label was added to a pull request.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/labeled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-labeled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-locked:
    post:
      description: Conversation on a pull request was locked. For more information,
        see "[Locking conversations](https://docs.github.com/communities/moderating-comments-and-conversations/locking-conversations)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/locked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-locked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-milestoned:
    post:
      description: A pull request was added to a milestone.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/milestoned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-milestoned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-opened:
    post:
      description: A pull request was created
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/opened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-opened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-ready-for-review:
    post:
      description: A draft pull request was marked as ready for review. For more information,
        see "[Changing the stage of a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/ready-for-review
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-ready-for-review'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-reopened:
    post:
      description: A previously closed pull request was reopened.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-comment-created:
    post:
      description: A comment on a pull request diff was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_comment
      operationId: pull-request-review-comment/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull request''s
        diff. For more information, see "[Commenting on a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or pull
        request review threads, use the `pull_request_review`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request_review_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-comment-deleted:
    post:
      description: A comment on a pull request diff was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_comment
      operationId: pull-request-review-comment/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull request''s
        diff. For more information, see "[Commenting on a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or pull
        request review threads, use the `pull_request_review`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request_review_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-comment-edited:
    post:
      description: The content of a comment on a pull request diff was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_comment
      operationId: pull-request-review-comment/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull request''s
        diff. For more information, see "[Commenting on a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or pull
        request review threads, use the `pull_request_review`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request_review_comment
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-dismissed:
    post:
      description: A review on a pull request was dismissed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review
      operationId: pull-request-review/dismissed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-dismissed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments in
        addition to a body comment and a state. For more information, see "[About
        pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreview)
        or "[Pull request reviews](https://docs.github.com/rest/pulls/reviews)" in
        the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request review threads, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request_review
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-edited:
    post:
      description: The body comment on a pull request review was edited.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review
      operationId: pull-request-review/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments in
        addition to a body comment and a state. For more information, see "[About
        pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreview)
        or "[Pull request reviews](https://docs.github.com/rest/pulls/reviews)" in
        the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request review threads, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request_review
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-request-removed:
    post:
      description: A request for review by a person or team was removed from a pull
        request.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/review-request-removed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-request-removed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-requested:
    post:
      description: Review by a person or team was requested for a pull request. For
        more information, see "[Requesting a pull request review](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/review-requested
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-requested'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-submitted:
    post:
      description: A review on a pull request was submitted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review
      operationId: pull-request-review/submitted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-submitted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments in
        addition to a body comment and a state. For more information, see "[About
        pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreview)
        or "[Pull request reviews](https://docs.github.com/rest/pulls/reviews)" in
        the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request review threads, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request_review
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-thread-resolved:
    post:
      description: A comment thread on a pull request was marked as resolved.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_thread
      operationId: pull-request-review-thread/resolved
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-thread-resolved'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a comment thread
        on a pull request. For more information, see "[About pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request reviews, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request_review_thread
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-thread-unresolved:
    post:
      description: A previously resolved comment thread on a pull request was marked
        as unresolved.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_thread
      operationId: pull-request-review-thread/unresolved
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-thread-unresolved'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a comment thread
        on a pull request. For more information, see "[About pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request reviews, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request_review_thread
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-synchronize:
    post:
      description: A pull request's head branch was updated. For example, the head
        branch was updated from the base branch or new commits were pushed to the
        head branch.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/synchronize
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-synchronize'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-unassigned:
    post:
      description: A user was unassigned from a pull request.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/unassigned
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unassigned'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-unlabeled:
    post:
      description: A label was removed from a pull request.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/unlabeled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlabeled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-unlocked:
    post:
      description: Conversation on a pull request was unlocked. For more information,
        see "[Locking conversations](https://docs.github.com/communities/moderating-comments-and-conversations/locking-conversations)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/unlocked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlocked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
  push:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#push
      operationId: push
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-push'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is a push to a repository branch. This
        includes when a commit is pushed, when a commit tag is pushed,

        when a branch is deleted, when a tag is deleted, or when a repository is created
        from a template. To subscribe to only branch

        and tag deletions, use the [`delete`](#delete) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.


        > [!NOTE]

        > Events will not be created if more than 5000 branches are pushed at once.
        Events will not be created for tags when more than three tags are pushed at
        once.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: push
        supported-webhook-types:
        - repository
        - organization
        - app
  registry-package-published:
    post:
      description: A package was published to a registry.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#registry_package
      operationId: registry-package/published
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-published'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub Packages](https://docs.github.com/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#package)
        or "[Packages](https://docs.github.com/rest/packages)" in the REST API documentation.


        To install this event on a GitHub App, the app must have at least read-level
        access for the "Packages" repository permission.


        > [!NOTE]

        > GitHub recommends that you use the newer `package` event instead.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: registry_package
        supported-webhook-types:
        - repository
        - organization
        - app
  registry-package-updated:
    post:
      description: A package that was previously published to a registry was updated.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#registry_package
      operationId: registry-package/updated
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-updated'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub Packages](https://docs.github.com/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#package)
        or "[Packages](https://docs.github.com/rest/packages)" in the REST API documentation.


        To install this event on a GitHub App, the app must have at least read-level
        access for the "Packages" repository permission.


        > [!NOTE]

        > GitHub recommends that you use the newer `package` event instead.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: registry_package
        supported-webhook-types:
        - repository
        - organization
        - app
  release-created:
    post:
      description: A draft was saved, or a release or pre-release was published without
        previously being saved as a draft.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: release
        supported-webhook-types:
        - repository
        - organization
        - app
  release-deleted:
    post:
      description: A release, pre-release, or draft release was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: release
        supported-webhook-types:
        - repository
        - organization
        - app
  release-edited:
    post:
      description: The details of a release, pre-release, or draft release were edited.
        For more information, see "[Managing releases in a repository](https://docs.github.com/repositories/releasing-projects-on-github/managing-releases-in-a-repository#editing-a-release)."
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: release
        supported-webhook-types:
        - repository
        - organization
        - app
  release-prereleased:
    post:
      description: A release was created and identified as a pre-release. A pre-release
        is a release that is not ready for production and may be unstable.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/prereleased
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-prereleased'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: release
        supported-webhook-types:
        - repository
        - organization
        - app
  release-published:
    post:
      description: A release, pre-release, or draft of a release was published.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/published
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-published'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: release
        supported-webhook-types:
        - repository
        - organization
        - app
  release-released:
    post:
      description: A release was published, or a pre-release was changed to a release.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/released
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-released'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: release
        supported-webhook-types:
        - repository
        - organization
        - app
  release-unpublished:
    post:
      description: A release or pre-release was unpublished.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/unpublished
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-unpublished'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: release
        supported-webhook-types:
        - repository
        - organization
        - app
  repository-advisory-published:
    post:
      description: A repository security advisory was published.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_advisory
      operationId: repository-advisory/published
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-advisory-published'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a repository
        security advisory. For more information about repository security advisories,
        see "[About GitHub Security Advisories for repositories](https://docs.github.com/code-security/repository-security-advisories/about-github-security-advisories-for-repositories)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Repository security advisories" permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_advisory
        supported-webhook-types:
        - repository
        - organization
        - app
  repository-advisory-reported:
    post:
      description: A private vulnerability report was submitted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_advisory
      operationId: repository-advisory/reported
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-advisory-reported'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a repository
        security advisory. For more information about repository security advisories,
        see "[About GitHub Security Advisories for repositories](https://docs.github.com/code-security/repository-security-advisories/about-github-security-advisories-for-repositories)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Repository security advisories" permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_advisory
        supported-webhook-types:
        - repository
        - organization
        - app
  repository-archived:
    post:
      description: A repository was archived.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/archived
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-archived'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-created:
    post:
      description: A repository was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-deleted:
    post:
      description: A repository was deleted. GitHub Apps and repository webhooks will
        not receive this event.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-dispatch-sample.collected:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_dispatch
      operationId: repository-dispatch/sample.collected
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-dispatch-sample'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when a GitHub App sends a `POST` request to `/repos/{owner}/{repo}/dispatches`.
        For more information, see [the REST API documentation for creating a repository
        dispatch event](https://docs.github.com/rest/repos/repos#create-a-repository-dispatch-event).
        In the payload, the `action` will be the `event_type` that was specified in
        the `POST /repos/{owner}/{repo}/dispatches` request body.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_dispatch
        supported-webhook-types:
        - app
  repository-edited:
    post:
      description: The topics, default branch, description, or homepage of a repository
        was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-import:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_import
      operationId: repository-import
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-import'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: This event occurs when a repository is imported to GitHub. For more
        information, see "[Importing a repository with GitHub Importer](https://docs.github.com/get-started/importing-your-projects-to-github/importing-source-code-to-github/importing-a-repository-with-github-importer)."
        For more information about the API to manage imports, see [the REST API documentation](https://docs.github.com/rest/migrations/source-imports).
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_import
        supported-webhook-types:
        - repository
        - organization
  repository-privatized:
    post:
      description: The visibility of a repository was changed to `private`.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/privatized
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-privatized'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-publicized:
    post:
      description: The visibility of a repository was changed to `public`.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/publicized
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-publicized'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-renamed:
    post:
      description: The name of a repository was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/renamed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-renamed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-ruleset-created:
    post:
      description: A repository ruleset was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_ruleset
      operationId: repository-ruleset/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-ruleset-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repository rulesets.

        For more information about repository rulesets, see "[Managing rulesets](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets)."

        For more information on managing rulesets via the APIs, see [Repository ruleset](https://docs.github.com/graphql/reference/objects#repositoryruleset)
        in the GraphQL documentation or "[Repository rules](https://docs.github.com/rest/repos/rules)"
        and "[Organization rules](https://docs.github.com/rest/orgs/rules) in the
        REST API documentation."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_ruleset
        supported-webhook-types:
        - repository
        - organization
        - app
  repository-ruleset-deleted:
    post:
      description: A repository ruleset was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_ruleset
      operationId: repository-ruleset/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-ruleset-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repository rulesets.

        For more information about repository rulesets, see "[Managing rulesets](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets)."

        For more information on managing rulesets via the APIs, see [Repository ruleset](https://docs.github.com/graphql/reference/objects#repositoryruleset)
        in the GraphQL documentation or "[Repository rules](https://docs.github.com/rest/repos/rules)"
        and "[Organization rules](https://docs.github.com/rest/orgs/rules) in the
        REST API documentation."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_ruleset
        supported-webhook-types:
        - repository
        - organization
        - app
  repository-ruleset-edited:
    post:
      description: A repository ruleset was edited.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_ruleset
      operationId: repository-ruleset/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-ruleset-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repository rulesets.

        For more information about repository rulesets, see "[Managing rulesets](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets)."

        For more information on managing rulesets via the APIs, see [Repository ruleset](https://docs.github.com/graphql/reference/objects#repositoryruleset)
        in the GraphQL documentation or "[Repository rules](https://docs.github.com/rest/repos/rules)"
        and "[Organization rules](https://docs.github.com/rest/orgs/rules) in the
        REST API documentation."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository or organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_ruleset
        supported-webhook-types:
        - repository
        - organization
        - app
  repository-transferred:
    post:
      description: Ownership of the repository was transferred to a user or organization
        account. This event is only sent to the account where the ownership is transferred.
        To receive the `repository.transferred` event, the new owner account must
        have the GitHub App installed, and the App must be subscribed to "Repository"
        events.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/transferred
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-transferred'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-unarchived:
    post:
      description: A previously archived repository was unarchived.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/unarchived
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-unarchived'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  repository-vulnerability-alert-create:
    post:
      description: A repository vulnerability alert was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      operationId: repository-vulnerability-alert/create
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-vulnerability-alert-create'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a security vulnerability
        alert in a repository.


        > [!WARNING]

        > **Closing down notice:** This event is closing down. Use the `dependabot_alert`
        event instead.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
        - repository
        - organization
  repository-vulnerability-alert-dismiss:
    post:
      description: A repository vulnerability alert was dismissed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      operationId: repository-vulnerability-alert/dismiss
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-vulnerability-alert-dismiss'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a security vulnerability
        alert in a repository.


        > [!WARNING]

        > **Closing down notice:** This event is closing down. Use the `dependabot_alert`
        event instead.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
        - repository
        - organization
  repository-vulnerability-alert-reopen:
    post:
      description: A previously dismissed or resolved repository vulnerability alert
        was reopened.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      operationId: repository-vulnerability-alert/reopen
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-vulnerability-alert-reopen'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a security vulnerability
        alert in a repository.


        > [!WARNING]

        > **Closing down notice:** This event is closing down. Use the `dependabot_alert`
        event instead.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
        - repository
        - organization
  repository-vulnerability-alert-resolve:
    post:
      description: A repository vulnerability alert was marked as resolved.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      operationId: repository-vulnerability-alert/resolve
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-vulnerability-alert-resolve'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a security vulnerability
        alert in a repository.


        > [!WARNING]

        > **Closing down notice:** This event is closing down. Use the `dependabot_alert`
        event instead.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
        - repository
        - organization
  secret-scanning-alert-created:
    post:
      description: A secret scanning alert was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      operationId: secret-scanning-alert/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: secret_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  secret-scanning-alert-location-created:
    post:
      description: A new instance of a previously detected secret was detected in
        a repository, and the location of the secret was added to the existing alert.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert_location
      operationId: secret-scanning-alert-location/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-location-created'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-location-created-form-encoded'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to the locations
        of a secret in a secret scanning alert.


        For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alerts, use the `secret_scanning_alert`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: secret_scanning_alert_location
        supported-webhook-types:
        - repository
        - organization
        - app
  secret-scanning-alert-publicly-leaked:
    post:
      description: A secret scanning alert was detected in a public repo.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      operationId: secret-scanning-alert/publicly-leaked
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-publicly-leaked'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: secret_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  secret-scanning-alert-reopened:
    post:
      description: A previously closed secret scanning alert was reopened.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      operationId: secret-scanning-alert/reopened
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-reopened'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: secret_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  secret-scanning-alert-resolved:
    post:
      description: A secret scanning alert was closed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      operationId: secret-scanning-alert/resolved
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-resolved'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: secret_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  secret-scanning-alert-validated:
    post:
      description: A secret scanning alert was validated.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      operationId: secret-scanning-alert/validated
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-validated'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: secret_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
  secret-scanning-scan-completed:
    post:
      description: A secret scanning scan was completed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_scan
      operationId: secret-scanning-scan/completed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-scan-completed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when secret scanning completes certain scans on
        a repository. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."


        Scans can originate from multiple events such as updates to a custom pattern,
        a push to a repository, or updates

        to patterns from partners. For more information on custom patterns, see "[About
        custom patterns](https://docs.github.com/code-security/secret-scanning/using-advanced-secret-scanning-and-push-protection-features/custom-patterns)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: secret_scanning_scan
        supported-webhook-types:
        - repository
        - organization
        - app
  security-advisory-published:
    post:
      description: A security advisory was published to the GitHub community.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#security_advisory
      operationId: security-advisory/published
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-published'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security advisory
        provides information about security vulnerabilities or malware that have been
        mapped to packages in ecosystems we support. For more information about global
        security advisories, see "[About global security advisories](https://docs.github.com/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the REST
        API documentation](https://docs.github.com/rest/security-advisories/global-advisories)
        or [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory dataset.
        For more information, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: security_advisory
        supported-webhook-types:
        - app
  security-advisory-updated:
    post:
      description: The metadata or description of a security advisory was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#security_advisory
      operationId: security-advisory/updated
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-updated'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security advisory
        provides information about security vulnerabilities or malware that have been
        mapped to packages in ecosystems we support. For more information about global
        security advisories, see "[About global security advisories](https://docs.github.com/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the REST
        API documentation](https://docs.github.com/rest/security-advisories/global-advisories)
        or [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory dataset.
        For more information, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: security_advisory
        supported-webhook-types:
        - app
  security-advisory-withdrawn:
    post:
      description: A previously published security advisory was withdrawn.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#security_advisory
      operationId: security-advisory/withdrawn
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-withdrawn'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security advisory
        provides information about security vulnerabilities or malware that have been
        mapped to packages in ecosystems we support. For more information about global
        security advisories, see "[About global security advisories](https://docs.github.com/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the REST
        API documentation](https://docs.github.com/rest/security-advisories/global-advisories)
        or [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory dataset.
        For more information, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: security_advisory
        supported-webhook-types:
        - app
  security-and-analysis:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#security_and_analysis
      operationId: security-and-analysis
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-and-analysis'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when code security and analysis features are enabled
        or disabled for a repository. For more information, see "[GitHub security
        features](https://docs.github.com/code-security/getting-started/github-security-features)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: security_and_analysis
        supported-webhook-types:
        - repository
        - organization
        - app
  sponsorship-cancelled:
    post:
      description: 'A sponsorship was cancelled and the last billing cycle has ended.


        This event is only sent when a recurring (monthly) sponsorship is cancelled;
        it is not sent for one-time sponsorships.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      operationId: sponsorship/cancelled
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-cancelled'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sponsorship
        supported-webhook-types:
        - sponsors_listing
  sponsorship-created:
    post:
      description: A sponsor created a sponsorship for a sponsored account. This event
        occurs once the payment is successfully processed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      operationId: sponsorship/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sponsorship
        supported-webhook-types:
        - sponsors_listing
  sponsorship-edited:
    post:
      description: A monthly sponsor changed who can see their sponsorship. If you
        recognize your sponsors publicly, you may want to update your sponsor recognition
        to reflect the change when this event occurs.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      operationId: sponsorship/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sponsorship
        supported-webhook-types:
        - sponsors_listing
  sponsorship-pending-cancellation:
    post:
      description: 'A sponsor scheduled a cancellation for their sponsorship. The
        cancellation will become effective on their next billing date.


        This event is only sent when a recurring (monthly) sponsorship is cancelled;
        it is not sent for one-time sponsorships.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      operationId: sponsorship/pending-cancellation
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-cancellation'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sponsorship
        supported-webhook-types:
        - sponsors_listing
  sponsorship-pending-tier-change:
    post:
      description: A sponsor scheduled a downgrade to a lower sponsorship tier. The
        new tier will become effective on their next billing date.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      operationId: sponsorship/pending-tier-change
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-tier-change'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sponsorship
        supported-webhook-types:
        - sponsors_listing
  sponsorship-tier-changed:
    post:
      description: A sponsor changed the tier of their sponsorship and the change
        has taken effect. If a sponsor upgraded their tier, the change took effect
        immediately. If a sponsor downgraded their tier, the change took effect at
        the beginning of the sponsor's next billing cycle.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      operationId: sponsorship/tier-changed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-tier-changed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sponsorship
        supported-webhook-types:
        - sponsors_listing
  star-created:
    post:
      description: Someone starred a repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#star
      operationId: star/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with stars](https://docs.github.com/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#starredrepositoryconnection)
        or "[Starring](https://docs.github.com/rest/activity/starring)" in the REST
        API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: star
        supported-webhook-types:
        - repository
        - organization
        - app
  star-deleted:
    post:
      description: Someone unstarred the repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#star
      operationId: star/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with stars](https://docs.github.com/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#starredrepositoryconnection)
        or "[Starring](https://docs.github.com/rest/activity/starring)" in the REST
        API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: star
        supported-webhook-types:
        - repository
        - organization
        - app
  status:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#status
      operationId: status
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-status'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when the status of a Git commit changes. For example,
        commits can be marked as `error`, `failure`, `pending`, or `success`. For
        more information, see "[About status checks](https://docs.github.com/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks)."
        For information about the APIs to manage commit statuses, see [the GraphQL
        documentation](https://docs.github.com/graphql/reference/objects#status) or
        "[Commit statuses](https://docs.github.com/rest/commits/statuses)" in the
        REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Commit statuses" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: status
        supported-webhook-types:
        - repository
        - organization
        - app
  sub-issues-parent-issue-added:
    post:
      description: A parent issue was added to an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sub-issues
      operationId: sub-issues/parent-issue-added
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sub-issues-parent-issue-added'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to sub-issues.


        For activity relating to issues more generally, use the `issues` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sub-issues
        supported-webhook-types:
        - repository
        - organization
        - app
  sub-issues-parent-issue-removed:
    post:
      description: A parent issue was removed from an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sub-issues
      operationId: sub-issues/parent-issue-removed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sub-issues-parent-issue-removed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to sub-issues.


        For activity relating to issues more generally, use the `issues` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sub-issues
        supported-webhook-types:
        - repository
        - organization
        - app
  sub-issues-sub-issue-added:
    post:
      description: A sub-issue was added to an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sub-issues
      operationId: sub-issues/sub-issue-added
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sub-issues-sub-issue-added'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to sub-issues.


        For activity relating to issues more generally, use the `issues` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sub-issues
        supported-webhook-types:
        - repository
        - organization
        - app
  sub-issues-sub-issue-removed:
    post:
      description: A sub-issue was removed from an issue.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sub-issues
      operationId: sub-issues/sub-issue-removed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sub-issues-sub-issue-removed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to sub-issues.


        For activity relating to issues more generally, use the `issues` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permissions.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: sub-issues
        supported-webhook-types:
        - repository
        - organization
        - app
  team-add:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team_add
      operationId: team-add
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-add'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when a team is added to a repository.

        For more information, see "[Managing teams and people with access to your
        repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository)."


        For activity relating to teams, see the `teams` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: team_add
        supported-webhook-types:
        - repository
        - organization
        - app
  team-added-to-repository:
    post:
      description: A team was granted access to a repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      operationId: team/added-to-repository
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-added-to-repository'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
  team-created:
    post:
      description: A team was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      operationId: team/created
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-created'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
  team-deleted:
    post:
      description: A team was deleted.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      operationId: team/deleted
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-deleted'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
  team-edited:
    post:
      description: The name, description, or visibility of a team was changed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      operationId: team/edited
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-edited'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
  team-removed-from-repository:
    post:
      description: A team's access to a repository was removed.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      operationId: team/removed-from-repository
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-removed-from-repository'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
  watch-started:
    post:
      description: Someone started watching the repository.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#watch
      operationId: watch/started
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-watch-started'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to watching, or
        subscribing to, a repository. For more information about watching, see "[Managing
        your subscriptions](https://docs.github.com/account-and-profile/managing-subscriptions-and-notifications-on-github/managing-subscriptions-for-activity-on-github/managing-your-subscriptions)."
        For information about the APIs to manage watching, see "[Watching](https://docs.github.com/rest/activity/watching)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: watch
        supported-webhook-types:
        - repository
        - organization
        - app
  workflow-dispatch:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_dispatch
      operationId: workflow-dispatch
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-dispatch'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when a GitHub Actions workflow is manually triggered.
        For more information, see "[Manually running a workflow](https://docs.github.com/actions/managing-workflow-runs/manually-running-a-workflow)."


        For activity relating to workflow runs, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: workflow_dispatch
        supported-webhook-types:
        - app
  workflow-job-completed:
    post:
      description: A job in a workflow run finished. This event occurs when a job
        in a workflow is completed, regardless of whether the job was successful or
        unsuccessful.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_job
      operationId: workflow-job/completed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-completed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a workflow](https://docs.github.com/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow jobs](https://docs.github.com/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow run,
        use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: workflow_job
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  workflow-job-in-progress:
    post:
      description: A job in a workflow run started processing on a runner.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_job
      operationId: workflow-job/in-progress
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-in-progress'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a workflow](https://docs.github.com/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow jobs](https://docs.github.com/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow run,
        use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: workflow_job
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  workflow-job-queued:
    post:
      description: A job in a workflow run was created.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_job
      operationId: workflow-job/queued
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-queued'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a workflow](https://docs.github.com/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow jobs](https://docs.github.com/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow run,
        use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: workflow_job
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  workflow-job-waiting:
    post:
      description: A job in a workflow run was created and is waiting for approvals.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_job
      operationId: workflow-job/waiting
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-waiting'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a workflow](https://docs.github.com/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow jobs](https://docs.github.com/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow run,
        use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: workflow_job
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  workflow-run-completed:
    post:
      description: A workflow run finished. This event occurs when a workflow run
        is completed, regardless of whether the workflow was successful or unsuccessful.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_run
      operationId: workflow-run/completed
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-completed'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About workflows](https://docs.github.com/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#workflowrun)
        or "[Workflow runs](https://docs.github.com/rest/actions/workflow-runs)" in
        the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: workflow_run
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  workflow-run-in-progress:
    post:
      description: A workflow run started processing on a runner.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_run
      operationId: workflow-run/in-progress
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-in-progress'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About workflows](https://docs.github.com/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#workflowrun)
        or "[Workflow runs](https://docs.github.com/rest/actions/workflow-runs)" in
        the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: workflow_run
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
  workflow-run-requested:
    post:
      description: A workflow run was triggered.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_run
      operationId: workflow-run/requested
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-requested'
        required: true
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About workflows](https://docs.github.com/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#workflowrun)
        or "[Workflow runs](https://docs.github.com/rest/actions/workflow-runs)" in
        the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: workflow_run
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
