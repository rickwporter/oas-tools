openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /owners:
    post:
      summary: Create a pet owner
      operationId: createOwner
      tags:
        - owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Owner'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /owners/{ownerId}:
    delete:
      summary: Delete an owner
      operationId: deleteOwner
      tags:
        - owners
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update an owner
      operationId: updateOwner
      tags:
        - owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Owner'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /owners/{ownerId}/pets:
    get:
      summary: List owners pets
      operationId: listOwnerPets
      tags:
        - owners
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a pet
      operationId: deletePetById
      tags:
        - pets
      responses:
        '204':
          description: Expected empty response for successful delete
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /examine/bloodPressure:
    post:
      summary: Record result of blood-pressure
      operationId: checkPetBloodPressure
      tags:
        - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamInfo'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /examine/heartRate:
    post:
      summary: Record result of heart-rate
      operationId: checkPetHeartRate
      tags:
        - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamInfo'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/:
    get:
      summary: Get application version
      operationId: appVersion
      responses:
        default:
          description: Version info
          content:
            application/json:
            schema:
              type: object
              properties:
                major:
                  type: integer
                minor:
                  type: integer
                patch:
                  type: integer
                full:
                  type: string
  /vets:
    post:
      summary: Create a veterinarian
      operationId: createVet
      tags:
        - vets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vet'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vets/{vetId}:
    delete:
      summary: Delete a veterinarian
      operationId: deleteVet
      tags:
        - vets
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    ExamInfo:
      type: object
      required:
        - petId
        - vetId
        - result
      properties:
        id:
          type: integer
          format: int64
          readonly: true
        petId:
          type: integer
          format: int64
        vetId:
          type: integer
          format: int64
        examType:
          type: string
          readonly: true
        result:
          type: string
        date:
          type: string
          format: date-time
    Owner:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        owner:
          type: integer
          format: int64
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Pet"
    Veterinarian:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        education:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Vet:
      type: object
      required:
        - name
      properties:
        name:
          type: string
